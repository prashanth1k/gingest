name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: Test
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        go-version: ["1.21", "1.22"]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-

      - name: Download dependencies
        run: go mod download

      - name: Run unit tests
        run: go test -v ./...

      - name: Run integration tests
        run: go test -tags=integration -v

      - name: Run tests with race detector
        run: go test -race -v ./...

      - name: Check formatting
        run: |
          if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
            echo "Code is not formatted properly:"
            gofmt -s -l .
            exit 1
          fi
        shell: bash

      - name: Run go vet
        run: go vet ./...

      - name: Run staticcheck (Linux only)
        if: matrix.os == 'ubuntu-latest' && matrix.go-version == '1.21'
        run: |
          go install honnef.co/go/tools/cmd/staticcheck@latest
          staticcheck ./...

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Build CLI
        run: go build -o gingest cmd/gingest/main.go

      - name: Test CLI help
        run: ./gingest --help

      - name: Test CLI version
        run: ./gingest --version

      - name: Build for multiple platforms
        run: |
          GOOS=linux GOARCH=amd64 go build -o gingest-linux-amd64 cmd/gingest/main.go
          GOOS=darwin GOARCH=amd64 go build -o gingest-darwin-amd64 cmd/gingest/main.go
          GOOS=windows GOARCH=amd64 go build -o gingest-windows-amd64.exe cmd/gingest/main.go

  coverage:
    name: Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Run tests with coverage
        run: go test -coverprofile=coverage.out ./...

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.out
          flags: unittests
          name: codecov-umbrella
